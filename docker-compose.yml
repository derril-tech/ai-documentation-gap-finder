version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ai_docgap
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    command: --jetstream --http_port 8222
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ai_docgap
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      minio:
        condition: service_healthy

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - api

  # Workers
  clone-worker:
    build:
      context: ./workers/clone
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy

  scan-code-worker:
    build:
      context: ./workers/scan-code
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy

  scan-docs-worker:
    build:
      context: ./workers/scan-docs
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy

  map-worker:
    build:
      context: ./workers/map
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ai_docgap
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      db:
        condition: service_healthy

  diff-worker:
    build:
      context: ./workers/diff
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy

  score-worker:
    build:
      context: ./workers/score
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ai_docgap
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      db:
        condition: service_healthy

  draft-worker:
    build:
      context: ./workers/draft
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ai_docgap
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
      db:
        condition: service_healthy

  export-worker:
    build:
      context: ./workers/export
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
      EXPORT_WORKSPACE_DIR: /workspace
    volumes:
      - export_workspace:/workspace
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy

  telemetry-worker:
    build:
      context: ./workers/telemetry
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  minio_data:
  export_workspace:
